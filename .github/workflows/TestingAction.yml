name : Communicating with Cliq

on:
  branch_protection_rule:
  check_run:
  check_suite:
  create:
  delete:
  deployment:
  deployment_status:
  discussion:
  discussion_comment:
  fork:
  gollum:
  issues:
  issue_comment:
  label:
  merge_group:
  milestone:
  page_build:
  project:
  project_card:
  project_column:
  public:
  pull_request:
    types: [ assigned , unassigned , labeled , unlabeled , opened , closed , edited , reopened , synchronize , converted_to_draft , ready_for_review , locked , unlocked , review_requested , review_request_removed , auto_merge_enabled , auto_merge_disabled ]
  pull_request_target:
    types: [ assigned , unassigned , labeled , unlabeled , opened , closed , edited , reopened , synchronize , converted_to_draft , ready_for_review , locked , unlocked , review_requested , review_request_removed , auto_merge_enabled , auto_merge_disabled ]
  pull_request_review:
  pull_request_review_comment:
  push:
  registry_package:
  release:
  repository_dispatch:
    types: [on-demand-test]
  schedule:
    - cron: '1/5 * * * *'
  status:
  watch:
  workflow_dispatch:
  
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: CliqInformer
    steps:
      - name: Set Up Checkout
        uses: actions/checkout@v1
      - name: Set Up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: 'temurin'
      - name: Set Up CliqInformer
        uses: prembala1710/CliqInformer@v0.0.11
        with:
          cliq-webhook: ${{ secrets.CliqToken }}
          channel-endpoint: 'cliqinformertestingchannel'
          branch-protection-rule-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          check-run-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          check-suite-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          create-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          delete-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          deployment-message:
          deployment-status-message:
          discussion-message:
          discussion-comment-message:
          fork-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          gollum-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          issues-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          issue-comment-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          label-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          merge-group-message: '(workflow) is triggered by (me) at (repo) under (ref)'
          milestone-message: '(repo) under (ref) triggers (workflow)'
          page-build-message: '(ref) Branch of (event) is changed by (me)'
          project-message: 'A (event) (action) is made by (workflow) at (ref)'
          project-card-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          project-column-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          public-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          pull-request-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          pull-request-comment-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          pull-request-target-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          pull-request-review-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          pull-request-review-comment-message: '(workflow) is triggered by (event) (action) by (me) at (repo) under (ref)'
          registry-package-message:
          release-message:
          repository-dispatch-message:
          default-message: '(event) has Occured'
